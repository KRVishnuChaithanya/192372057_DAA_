def findMedianSortedArrays(nums1, nums2):
    if len(nums1) > len(nums2):
        nums1, nums2 = nums2, nums1

    m, n = len(nums1), len(nums2)
    imin, imax, half_len = 0, m, (m + n + 1) // 2

    while imin <= imax:
        i = (imin + imax) // 2
        j = half_len - i
        
        if i < m and nums1[i] < nums2[j - 1]:
            imin = i + 1
        elif i > 0 and nums1[i - 1] > nums2[j]:
            imax = i - 1
        else:
            max_of_left = (nums1[i - 1] if i != 0 else float('-inf'))
            max_of_left = max(max_of_left, nums2[j - 1] if j != 0 else float('-inf'))

            if (m + n) % 2 == 1:
                return max_of_left

            min_of_right = (nums1[i] if i != m else float('inf'))
            min_of_right = min(min_of_right, nums2[j] if j != n else float('inf'))

            return (max_of_left + min_of_right) / 2.0

nums1 = [1, 3]
nums2 = [2]
print(findMedianSortedArrays(nums1, nums2))  
