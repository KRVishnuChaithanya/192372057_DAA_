def champagneTower(poured, query_row, query_glass):
    dp = [[0] * k for k in range(1, 102)]
    
    # Initial pour
    dp[0][0] = poured
    
    for r in range(100):
        for c in range(r + 1):
            if dp[r][c] >= 1:
                overflow = (dp[r][c] - 1) / 2.0
                dp[r][c] = 1
                
                dp[r + 1][c] += overflow
                dp[r + 1][c + 1] += overflow
    
    return min(1, dp[query_row][query_glass])

print(champagneTower(1, 1, 1)) 
print(champagneTower(2, 1, 1))  
print(champagneTower(100000009, 33, 17))  
